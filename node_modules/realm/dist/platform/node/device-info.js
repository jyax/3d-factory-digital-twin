"use strict";
////////////////////////////////////////////////////////////////////////////
//
// Copyright 2023 Realm Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
////////////////////////////////////////////////////////////////////////////
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const node_os_1 = __importDefault(require("node:os"));
const node_process_1 = __importDefault(require("node:process"));
const package_json_1 = require("realm/package.json");
const device_info_1 = require("../device-info");
(0, device_info_1.inject)({
    create() {
        return {
            sdk: "JS",
            sdkVersion: package_json_1.version,
            platform: node_os_1.default.type(),
            platformVersion: node_os_1.default.release(),
            deviceName: "unknown",
            deviceVersion: "unknown",
            cpuArch: node_os_1.default.arch(),
            frameworkName: typeof node_process_1.default.versions.electron === "string" ? "Electron" : "Node.js",
            frameworkVersion: node_process_1.default.versions.electron || node_process_1.default.version,
            bundleId: package_json_1.config?.anonymizedBundleId || "unknown",
        };
    },
});
//# sourceMappingURL=device-info.js.map