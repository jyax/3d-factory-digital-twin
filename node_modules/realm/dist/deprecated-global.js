"use strict";
////////////////////////////////////////////////////////////////////////////
//
// Copyright 2024 Realm Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
////////////////////////////////////////////////////////////////////////////
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const internal_1 = require("./internal");
const internal = __importStar(require("./internal"));
let warnedAboutGlobalRealmUse = false;
Object.defineProperty(internal_1.safeGlobalThis, "Realm", {
    get() {
        if (internal_1.flags.THROW_ON_GLOBAL_REALM) {
            throw new Error("Accessed global Realm, please update your code to ensure you import Realm:\nimport Realm from 'realm';");
        }
        else if (!warnedAboutGlobalRealmUse) {
            // eslint-disable-next-line no-console
            console.warn("Your app is relying on a Realm global, which will be removed in realm-js v13, please update your code to ensure you import Realm:\n\n", 'import Realm from "realm"; // For ES Modules\n', 'const Realm = require("realm"); // For CommonJS\n\n', "To determine where, put this in the top of your index file:\n", `import Realm from "realm";\n`, `Realm.flags.THROW_ON_GLOBAL_REALM = true`);
            warnedAboutGlobalRealmUse = true;
        }
        return internal_1.Realm;
    },
    configurable: true,
});
//# sourceMappingURL=deprecated-global.js.map