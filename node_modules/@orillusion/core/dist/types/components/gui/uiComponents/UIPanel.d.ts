/// <reference types="@webgpu/types" />
import { View3D } from "../../../core/View3D";
import { Object3D } from "../../../core/entities/Object3D";
import { BillboardComponent } from "../../BillboardComponent";
import { BillboardType } from "../GUIConfig";
import { GUIGeometry } from "../core/GUIGeometry";
import { GUIRenderer } from "../core/GUIRenderer";
import { UIImage } from "./UIImage";
/**
 * Container for UI components
 * @group GPU GUI
 */
export declare class UIPanel extends UIImage {
    readonly space: number;
    needUpdateGeometry: boolean;
    panelOrder: number;
    needSortOnCameraZ?: boolean;
    protected _billboard: BillboardComponent;
    private _rebuild;
    scissorEnable: boolean;
    scissorCornerRadius: number;
    scissorFadeOutSize: number;
    protected _uiRenderer: GUIRenderer;
    protected _geometry: GUIGeometry;
    protected _maxCount: number;
    panelRatio: number;
    readonly isUIPanel = true;
    cloneTo(obj: Object3D): void;
    copyComponent(from: this): this;
    init(param?: any): void;
    updateDrawCallSegment(index: number, indexStart: number, indexCount: number): void;
    private create;
    /**
    * Return How many Quads can a single GUIGeometry support at most
    */
    get quadMaxCount(): number;
    set billboard(type: BillboardType);
    get billboard(): BillboardType;
    set cullMode(value: GPUCullMode);
    get cullMode(): GPUCullMode;
    onUpdate(view?: View3D): void;
    private _collectTransform;
    private rebuildGUIMesh;
    private updateGUIPixelRatio;
}
