/// <reference types="@webgpu/types" />
import { Camera3D } from "../../../../../core/Camera3D";
import { UniformGPUBuffer } from "../buffer/UniformGPUBuffer";
import { MatrixBindGroup } from "./MatrixBindGroup";
/**
 * @internal
 * @author sirxu
 * @group GFX
 */
export declare class GlobalUniformGroup {
    uuid: string;
    usage: number;
    globalBindGroup: GPUBindGroup;
    uniformGPUBuffer: UniformGPUBuffer;
    private matrixBindGroup;
    private uniformByteLength;
    private matrixesByteLength;
    private shadowMatrixRaw;
    private csmMatrixRaw;
    private csmShadowBias;
    shadowLights: Float32Array;
    dirShadowStart: number;
    dirShadowEnd: number;
    pointShadowStart: number;
    pointShadowEnd: number;
    /**
     *
     * @param matrixBindGroup global matrix bindgroup
     */
    constructor(matrixBindGroup: MatrixBindGroup);
    createBindGroup(): void;
    setCamera(camera: Camera3D): void;
    setShadowCamera(camera: Camera3D): void;
    setShadowLight(): void;
}
