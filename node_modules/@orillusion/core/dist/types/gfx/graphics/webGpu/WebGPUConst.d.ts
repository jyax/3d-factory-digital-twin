/// <reference types="@webgpu/types" />
/**
 * @internal
 */
export declare let GPUAddressMode: {
    clamp_to_edge: GPUAddressMode;
    repeat: GPUAddressMode;
    mirror_repeat: GPUAddressMode;
};
/**
 * @internal
 */
export declare let GPUBlendFactor: {
    zero: GPUBlendFactor;
    one: GPUBlendFactor;
    src: GPUBlendFactor;
    one_minus_src: GPUBlendFactor;
    src_alpha: GPUBlendFactor;
    one_minus_src_alpha: GPUBlendFactor;
    dst: GPUBlendFactor;
    one_minus_dst: GPUBlendFactor;
    dst_alpha: GPUBlendFactor;
    one_minus_dst_alpha: GPUBlendFactor;
    src_alpha_saturated: GPUBlendFactor;
    constant: GPUBlendFactor;
    one_minus_constant: GPUBlendFactor;
};
/**
 * @internal
 */
export declare const blendComponent: {
    srcFactor: string;
    dstFactor: string;
    operation: string;
};
/**
 * @internal
 */
export declare const stencilStateFace: {
    compare: string;
    failOp: string;
    depthFailOp: string;
    passOp: string;
};
/**
 * @internal
 */
export declare let GPUCompareFunction: {
    never: GPUCompareFunction;
    less: GPUCompareFunction;
    equal: GPUCompareFunction;
    less_equal: GPUCompareFunction;
    greater: GPUCompareFunction;
    not_equal: GPUCompareFunction;
    greater_equal: GPUCompareFunction;
    always: GPUCompareFunction;
};
/**
 * @internal
 */
export declare let GPUCullMode: {
    none: GPUCullMode;
    front: GPUCullMode;
    back: GPUCullMode;
};
/**
 * @internal
 */
export type GPUFeatureName = 'depth-clamping' | 'depth24unorm-stencil8' | 'depth32float-stencil8' | 'pipeline-statistics-query' | 'texture-compression-bc' | 'timestamp-query';
/**
 * @internal
 */
export declare let GPUFilterMode: {
    nearest: GPUFilterMode;
    linear: GPUFilterMode;
};
/**
 * @internal
 */
export type GPUFrontFace = 'ccw' | 'cw';
/**
 * @internal
 */
export declare let GPUPrimitiveTopology: {
    point_list: GPUPrimitiveTopology;
    line_list: GPUPrimitiveTopology;
    line_strip: GPUPrimitiveTopology;
    triangle_list: GPUPrimitiveTopology;
    triangle_strip: GPUPrimitiveTopology;
};
/**
 * @internal
 */
export declare let GPUTextureFormat: {
    r8unorm: GPUTextureFormat;
    r8snorm: GPUTextureFormat;
    r8uint: GPUTextureFormat;
    r8sint: GPUTextureFormat;
    r16uint: GPUTextureFormat;
    r16sint: GPUTextureFormat;
    r16float: GPUTextureFormat;
    rg8unorm: GPUTextureFormat;
    rg8snorm: GPUTextureFormat;
    rg8uint: GPUTextureFormat;
    rg8sint: GPUTextureFormat;
    r32uint: GPUTextureFormat;
    r32sint: GPUTextureFormat;
    r32float: GPUTextureFormat;
    rg16uint: GPUTextureFormat;
    rg16sint: GPUTextureFormat;
    rg16float: GPUTextureFormat;
    rgba8unorm: GPUTextureFormat;
    rgba8unorm_srgb: GPUTextureFormat;
    rgba8snorm: GPUTextureFormat;
    rgba8uint: GPUTextureFormat;
    rgba8sint: GPUTextureFormat;
    bgra8unorm: GPUTextureFormat;
    bgra8unorm_srgb: GPUTextureFormat;
    rgb9e5ufloat: GPUTextureFormat;
    rgb10a2unorm: GPUTextureFormat;
    rg11b10ufloat: GPUTextureFormat;
    rg32uint: GPUTextureFormat;
    rg32sint: GPUTextureFormat;
    rg32float: GPUTextureFormat;
    rgba16uint: GPUTextureFormat;
    rgba16sint: GPUTextureFormat;
    rgba16float: GPUTextureFormat;
    rgba32uint: GPUTextureFormat;
    rgba32sint: GPUTextureFormat;
    rgba32float: GPUTextureFormat;
    stencil8: GPUTextureFormat;
    depth16unorm: GPUTextureFormat;
    depth24plus: GPUTextureFormat;
    depth24plus_stencil8: GPUTextureFormat;
    depth32float: GPUTextureFormat;
    bc1_rgba_unorm: GPUTextureFormat;
    bc1_rgba_unorm_srgb: GPUTextureFormat;
    bc2_rgba_unorm: GPUTextureFormat;
    bc2_rgba_unorm_srgb: GPUTextureFormat;
    bc3_rgba_unorm: GPUTextureFormat;
    bc3_rgba_unorm_srgb: GPUTextureFormat;
    bc4_r_unorm: GPUTextureFormat;
    bc4_r_snorm: GPUTextureFormat;
    bc5_rg_unorm: GPUTextureFormat;
    bc5_rg_snorm: GPUTextureFormat;
    bc6h_rgb_ufloat: GPUTextureFormat;
    bc6h_rgb_float: GPUTextureFormat;
    bc7_rgba_unorm: GPUTextureFormat;
    bc7_rgba_unorm_srgb: GPUTextureFormat;
    depth24unorm_stencil8: GPUTextureFormat;
    depth32float_stencil8: GPUTextureFormat;
};
/**
 * @internal
 */
export declare let GPUVertexFormat: {
    uint8x2: GPUVertexFormat;
    uint8x4: GPUVertexFormat;
    sint8x2: GPUVertexFormat;
    sint8x4: GPUVertexFormat;
    unorm8x2: GPUVertexFormat;
    unorm8x4: GPUVertexFormat;
    snorm8x2: GPUVertexFormat;
    snorm8x4: GPUVertexFormat;
    uint16x2: GPUVertexFormat;
    uint16x4: GPUVertexFormat;
    sint16x2: GPUVertexFormat;
    sint16x4: GPUVertexFormat;
    unorm16x2: GPUVertexFormat;
    unorm16x4: GPUVertexFormat;
    snorm16x2: GPUVertexFormat;
    snorm16x4: GPUVertexFormat;
    float16x2: GPUVertexFormat;
    float16x4: GPUVertexFormat;
    float32: GPUVertexFormat;
    float32x2: GPUVertexFormat;
    float32x3: GPUVertexFormat;
    float32x4: GPUVertexFormat;
    uint32: GPUVertexFormat;
    uint32x2: GPUVertexFormat;
    uint32x3: GPUVertexFormat;
    uint32x4: GPUVertexFormat;
    sint32: GPUVertexFormat;
    sint32x2: GPUVertexFormat;
    sint32x3: GPUVertexFormat;
    sint32x4: GPUVertexFormat;
};
/**
 * @internal
 */
export declare let GPUVertexStepMode: {
    vertex: GPUVertexStepMode;
    instance: GPUVertexStepMode;
};
