import { MemoryInfo } from '../../../../../core/pool/memory/MemoryInfo';
import { Color } from '../../../../../math/Color';
import { Vector2 } from '../../../../../math/Vector2';
import { Vector3 } from '../../../../../math/Vector3';
import { Vector4 } from '../../../../../math/Vector4';
import { UniformValue } from '../../shader/value/UniformValue';
/**
 * @internal
 */
export declare class UniformNode {
    size: number;
    memoryInfo: MemoryInfo;
    bindOnChange: () => void;
    private _data;
    private _type;
    private _x;
    private _y;
    private _z;
    private _w;
    constructor(value: UniformValue);
    get data(): UniformValue;
    set data(value: UniformValue);
    getColor(ret: Color): Color;
    get color(): Color;
    set color(value: Color);
    get value(): number;
    set value(value: number);
    get vector2(): Vector2;
    set vector2(value: Vector2);
    get vector3(): Vector3;
    set vector3(value: Vector3);
    get vector4(): Vector4;
    set vector4(value: Vector4);
    onChange(): void;
    float32Array(value: Float32Array): void;
    update(): void;
}
