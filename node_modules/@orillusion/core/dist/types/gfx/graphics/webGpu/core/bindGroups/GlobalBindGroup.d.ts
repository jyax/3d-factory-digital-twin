import { Camera3D } from "../../../../../core/Camera3D";
import { Scene3D } from "../../../../../core/Scene3D";
import { Probe } from "../../../../renderJob/passRenderer/ddgi/Probe";
import { GlobalUniformGroup } from "./GlobalUniformGroup";
import { LightEntries } from "./groups/LightEntries";
import { MatrixBindGroup } from "./MatrixBindGroup";
/**
 * @internal
 * Use Global DO Matrix ArrayBuffer Descriptor
 * @group GFX
 */
export declare class GlobalBindGroup {
    private static _cameraBindGroups;
    private static _lightEntriesMap;
    private static _probeEntries;
    static modelMatrixBindGroup: MatrixBindGroup;
    static init(): void;
    static getCameraGroup(camera: Camera3D): GlobalUniformGroup;
    static getLightEntries(scene: Scene3D): LightEntries;
    static updateProbes(probes: Probe[]): void;
}
