import { Scene3D } from "../../../../../core/Scene3D";
import { GeometryBase } from "../../../../../core/geometry/GeometryBase";
import { BitmapTexture2DArray } from "../../../../../textures/BitmapTexture2DArray";
import { Graphic3DMeshRenderer } from "./Graphic3DMeshRenderer";
import { Graphic3DRibbonRenderer } from "./Graphic3DRibbonRenderer";
import { Graphic3DFaceRenderer } from "./Graphic3DFaceRenderer";
import { DynamicFaceRenderer } from "./DynamicFaceRenderer";
import { Ctor } from "../../../../..";
import { DynamicDrawStruct } from "./DynamicDrawStruct";
export declare class Graphic3DMesh {
    static meshMap: Map<GeometryBase, Graphic3DMeshRenderer>;
    static meshDrawGroup: Map<string, Graphic3DMeshRenderer>;
    static ribbonMap: Map<string, Graphic3DRibbonRenderer>;
    static nodeMap: Map<string, DynamicFaceRenderer>;
    static faceMap: Map<string, Graphic3DFaceRenderer>;
    static draw(scene: Scene3D, geo: GeometryBase, texture: BitmapTexture2DArray, count: number): Graphic3DMeshRenderer;
    static drawRibbon(id: string, scene: Scene3D, texture: BitmapTexture2DArray, trailSegment: number, count: number): Graphic3DRibbonRenderer;
    static drawShape(id: string, scene: Scene3D, texture: BitmapTexture2DArray): Graphic3DFaceRenderer;
    static drawNode<T extends DynamicFaceRenderer>(id: string, c: Ctor<T>, nodeStruct: Ctor<DynamicDrawStruct>, scene: Scene3D, texture: BitmapTexture2DArray, maxNodeCount: number, maxFaceCount?: number, standAloneMatrix?: boolean): T;
}
