import{watch as d,toRef as Le,ref as qr,defineComponent as o,watchEffect as Yr,inject as V,provide as Jr,getCurrentInstance as Qr,onUnmounted as es,createApp as ts}from"vue";import{Vector3 as ie,Raycaster as rs,Plane as ss,Vector2 as I,InstancedMesh as ye,WebGLRenderer as is,OrthographicCamera as ns,PerspectiveCamera as as,Scene as os,Color as Y,Texture as hs,Group as ds,WebGLCubeRenderTarget as us,RGBFormat as ls,LinearMipmapLinearFilter as cs,CubeCamera as ms,Mesh as fs,BufferGeometry as ps,BufferAttribute as ys,BoxGeometry as _e,CircleGeometry as gs,ConeGeometry as vs,CylinderGeometry as bs,DodecahedronGeometry as Ss,ExtrudeGeometry as Ps,IcosahedronGeometry as ws,LatheGeometry as xs,OctahedronGeometry as Cs,PlaneGeometry as Oe,PolyhedronGeometry as Ms,RingGeometry as Gs,SphereGeometry as Ls,ShapeGeometry as _s,TetrahedronGeometry as Os,TorusGeometry as Ns,TorusKnotGeometry as Es,TubeGeometry as Rs,CatmullRomCurve3 as Ne,Curve as $s,SpotLight as ge,DirectionalLight as ve,AmbientLight as zs,HemisphereLight as js,PointLight as Ts,RectAreaLight as ks,MeshLambertMaterial as Is,MeshPhongMaterial as As,MeshPhysicalMaterial as Bs,PointsMaterial as Fs,ShadowMaterial as Ds,MeshStandardMaterial as Us,MeshToonMaterial as Hs,MeshBasicMaterial as Ee,TextureLoader as J,MeshMatcapMaterial as Vs,ShaderMaterial as be,ShaderChunk as K,UniformsUtils as Re,ShaderLib as Ks,CubeReflectionMapping as Xs,CubeTextureLoader as Ws,VideoTexture as Zs,DoubleSide as qs,SpriteMaterial as Ys,Sprite as Js,Points as Qs}from"three";import{OrbitControls as ei}from"three/examples/jsm/controls/OrbitControls.js";import{RectAreaLightUniformsLib as ti}from"three/examples/jsm/lights/RectAreaLightUniformsLib.js";import{RectAreaLightHelper as ri}from"three/examples/jsm/helpers/RectAreaLightHelper.js";import{TextGeometry as si}from"three/examples/jsm/geometries/TextGeometry.js";import{FontLoader as ii}from"three/examples/jsm/loaders/FontLoader.js";import{GLTFLoader as ni}from"three/examples/jsm/loaders/GLTFLoader.js";import{FBXLoader as ai}from"three/examples/jsm/loaders/FBXLoader.js";import{EffectComposer as oi}from"three/examples/jsm/postprocessing/EffectComposer.js";import{RenderPass as hi}from"three/examples/jsm/postprocessing/RenderPass.js";import{BokehPass as di}from"three/examples/jsm/postprocessing/BokehPass.js";import{FilmPass as ui}from"three/examples/jsm/postprocessing/FilmPass.js";import{ShaderPass as ne}from"three/examples/jsm/postprocessing/ShaderPass.js";import{FXAAShader as li}from"three/examples/jsm/shaders/FXAAShader.js";import{HalftonePass as ci}from"three/examples/jsm/postprocessing/HalftonePass.js";import{SMAAPass as mi}from"three/examples/jsm/postprocessing/SMAAPass.js";import{SSAOPass as fi}from"three/examples/jsm/postprocessing/SSAOPass.js";import{UnrealBloomPass as pi}from"three/examples/jsm/postprocessing/UnrealBloomPass.js";function X(e,t,r){t instanceof Object&&Object.entries(t).forEach(([s,i])=>{r?r(e,s,i):e[s]=i})}function A(e,t,r,s=!0,i){s&&X(r,e[t],i);const a=Le(e,t);return d(a,n=>{X(r,n,i)})}function $e(e,t,r=!0,s){r&&X(t,e,s);const i=qr(e);return d(i,a=>{X(t,a,s)},{deep:!0})}function W(e,t){t instanceof Object&&Object.entries(t).forEach(([r,s])=>{e[r]=s})}function ze(e,t,r){t.forEach(s=>{f(e,s,r,s)})}function f(e,t,r,s){const i=s||t,a=Le(e,t);a.value instanceof Object?(W(r[i],a.value),d(a,n=>{W(r[i],n)},{deep:!0})):(a.value!==void 0&&(r[i]=e[t]),d(a,n=>{r[i]=n}))}function Q(e,t=[]){const r={};return Object.entries(e).forEach(([s,i])=>{(!t||!t.includes(s))&&(r[s]=i)}),r}function je(e,t,r){return r=r<0?0:r,r=r>1?1:r,e+(t-e)*r}function Te(e,t,r){return e<t?t:e>r?r:e}const yi="https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d",gi="0404E8_0404B5_0404CB_3333FC";function Se(e=gi,t=1024){const r=`${e}${vi(t)}.png`;return`${yi}/${t}/${r}`}function vi(e){switch(e){case 64:return"-64px";case 128:return"-128px";case 256:return"-256px";case 512:return"-512px";default:return""}}function bi(e){const{camera:t,resetPosition:r=new ie(0,0,0)}=e,s=new rs,i=r.clone(),a=new ss(new ie(0,0,1),0);return{position:i,updatePosition:M=>{s.setFromCamera(M,t),t.getWorldDirection(a.normal),s.ray.intersectPlane(a,i)},intersect:(M,G,m=!1)=>(s.setFromCamera(M,t),s.intersectObjects(G,m))}}function ke(e){const{camera:t,domElement:r,intersectObjects:s,intersectRecursive:i=!1,touch:a=!0,resetOnEnd:n=!1,onEnter:l=()=>{},onMove:M=()=>{},onLeave:G=()=>{},onClick:m=()=>{},onIntersectEnter:_=()=>{},onIntersectOver:E=()=>{},onIntersectMove:v=()=>{},onIntersectLeave:D=()=>{},onIntersectClick:U=()=>{}}=e,p=new I(0,0),y=new I(0,0),R=bi({camera:t}),h=R.position,u={position:p,positionN:y,positionV3:h,intersectObjects:s,listeners:!1,addListeners:Wr,removeListeners:Zr,intersect:we};return u;function O(){p.set(0,0),y.set(0,0),h.set(0,0,0)}function b(c){let w,k;c.touches&&c.touches.length>0?(w=c.touches[0].clientX,k=c.touches[0].clientY):(w=c.clientX,k=c.clientY);const $=r.getBoundingClientRect();p.x=w-$.left,p.y=k-$.top,y.x=p.x/$.width*2-1,y.y=-(p.y/$.height)*2+1,R.updatePosition(y)}function we(){const c=Ce();if(c.length){const w=R.intersect(y,c,i),k=[...c],$=[];w.forEach(z=>{var F,j,S;const{object:x}=z,C=fe(x);if(x instanceof ye){if($.indexOf(x)!==-1)return;$.push(x)}if(!x.userData.over){x.userData.over=!0;const pe={type:"pointerover",over:!0,component:C,intersect:z},Ge={...pe,type:"pointerenter"};E(pe),_(Ge),(F=C==null?void 0:C.onPointerOver)==null||F.call(C,pe),(j=C==null?void 0:C.onPointerEnter)==null||j.call(C,Ge)}const Me={type:"pointermove",component:C,intersect:z};v(Me),(S=C==null?void 0:C.onPointerMove)==null||S.call(C,Me),k.splice(k.indexOf(x),1)}),k.forEach(z=>{var F,j;const S=fe(z);if(z.userData.over){z.userData.over=!1;const x={type:"pointerover",over:!1,component:S},C={...x,type:"pointerleave"};E(x),D(C),(F=S==null?void 0:S.onPointerOver)==null||F.call(S,x),(j=S==null?void 0:S.onPointerLeave)==null||j.call(S,C)}})}}function te(c){b(c),l({type:"pointerenter",position:p,positionN:y,positionV3:h})}function re(c){b(c),M({type:"pointermove",position:p,positionN:y,positionV3:h}),we()}function xe(c){b(c);const w=Ce();if(w.length){const k=R.intersect(y,w,i),$=[];k.forEach(z=>{var F;const{object:j}=z,S=fe(j);if(j instanceof ye){if($.indexOf(j)!==-1)return;$.push(j)}const x={type:"click",component:S,intersect:z};U(x),(F=S==null?void 0:S.onClick)==null||F.call(S,x)})}m({type:"click",position:p,positionN:y,positionV3:h})}function se(){n&&O(),G({type:"pointerleave"})}function fe(c){if(c.userData.component)return c.userData.component;let w=c.parent;for(;w;){if(w.userData.component)return w.userData.component;w=w.parent}}function Ce(){return typeof s=="function"?s():s}function Wr(){r.addEventListener("mouseenter",te),r.addEventListener("mousemove",re),r.addEventListener("mouseleave",se),r.addEventListener("click",xe),a&&(r.addEventListener("touchstart",te),r.addEventListener("touchmove",re),r.addEventListener("touchend",se)),u.listeners=!0}function Zr(){r.removeEventListener("mouseenter",te),r.removeEventListener("mousemove",re),r.removeEventListener("mouseleave",se),r.removeEventListener("click",xe),r.removeEventListener("touchstart",te),r.removeEventListener("touchmove",re),r.removeEventListener("touchend",se),u.listeners=!1}}function Si(e){const t={antialias:!0,alpha:!1,autoClear:!0,orbitCtrl:!1,pointer:!1,resize:!1,width:300,height:150};e&&Object.entries(e).forEach(([h,u])=>{t[h]=u});const r={width:1,height:1,wWidth:1,wHeight:1,ratio:1},s=[],i=[],a=l(),n={config:t,renderer:a,size:r,init:M,dispose:U,render:_,renderC:E,setSize:y,addIntersectObject:v,removeIntersectObject:D};return n;function l(){const h=new is({canvas:t.canvas,antialias:t.antialias,alpha:t.alpha,...t.params});return h.autoClear=t.autoClear,h}function M(){if(!n.scene)return console.error("Missing Scene"),!1;if(!n.camera)return console.error("Missing Camera"),!1;if(t.resize?(p(),window.addEventListener("resize",p)):t.width&&t.height&&y(t.width,t.height),G(),t.orbitCtrl){const h=new ei(n.camera,n.renderer.domElement);t.orbitCtrl instanceof Object&&Object.entries(t.orbitCtrl).forEach(([u,O])=>{h[u]=O}),m(()=>{h.update()}),n.cameraCtrl=h}return!0}function G(){let h={camera:n.camera,domElement:n.renderer.domElement,intersectObjects:i};t.pointer&&t.pointer instanceof Object&&(h={...h,...t.pointer});const u=n.pointer=ke(h);(t.pointer||i.length)&&(u.addListeners(),h.intersectMode==="frame"&&m(u.intersect))}function m(h){s.push(h)}function _(){s.forEach(h=>h()),n.renderer.render(n.scene,n.camera)}function E(){s.forEach(h=>h()),n.composer.render()}function v(h){i.indexOf(h)===-1&&i.push(h),n.pointer&&!n.pointer.listeners&&n.pointer.addListeners()}function D(h){const u=i.indexOf(h);u!==-1&&i.splice(u,1),n.pointer&&!t.pointer&&i.length===0&&n.pointer.removeListeners()}function U(){window.removeEventListener("resize",p),n.pointer&&n.pointer.removeListeners(),n.cameraCtrl&&n.cameraCtrl.dispose(),n.renderer&&n.renderer.dispose()}function p(){var h;if(t.resize==="window")y(window.innerWidth,window.innerHeight);else{const u=n.renderer.domElement.parentNode;u&&y(u.clientWidth,u.clientHeight)}(h=t.onResize)==null||h.call(t,r)}function y(h,u){r.width=h,r.height=u,r.ratio=h/u,n.renderer.setSize(h,u,!1);const O=n.camera;if(O.type==="PerspectiveCamera"){const b=O;b.aspect=r.ratio,b.updateProjectionMatrix()}if(O.type==="OrthographicCamera"){const b=O;r.wWidth=b.right-b.left,r.wHeight=b.top-b.bottom}else{const b=R();r.wWidth=b[0],r.wHeight=b[1]}}function R(){const h=n.camera,u=h.fov*Math.PI/180,O=2*Math.tan(u/2)*Math.abs(h.position.z);return[O*h.aspect,O]}}const N=Symbol("Renderer");var Ie=o({name:"Renderer",props:{params:{type:Object,default:()=>({})},antialias:Boolean,alpha:Boolean,autoClear:{type:Boolean,default:!0},orbitCtrl:{type:[Boolean,Object],default:!1},pointer:{type:[Boolean,Object],default:!1},resize:{type:[Boolean,String],default:!1},shadow:Boolean,width:String,height:String,pixelRatio:Number,xr:Boolean,props:{type:Object,default:()=>({})},onReady:Function},inheritAttrs:!1,setup(e,{attrs:t}){const r=[],s=[],i=[],a=[],n=[],l=document.createElement("canvas");Object.entries(t).forEach(([_,E])=>{const v=_.match(/^on([A-Z][a-zA-Z]*)$/);v?l.addEventListener(v[1].toLowerCase(),E):l.setAttribute(_,E)});const M={canvas:l,params:e.params,antialias:e.antialias,alpha:e.alpha,autoClear:e.autoClear,orbitCtrl:e.orbitCtrl,pointer:e.pointer,resize:e.resize};e.width&&(M.width=parseInt(e.width)),e.height&&(M.height=parseInt(e.height));const G=Si(M);A(e,"props",G.renderer),Yr(()=>{e.pixelRatio&&G.renderer.setPixelRatio(e.pixelRatio)});const m=()=>{};return{canvas:l,three:G,renderer:G.renderer,size:G.size,renderFn:m,raf:!0,initCallbacks:r,mountedCallbacks:s,beforeRenderCallbacks:i,afterRenderCallbacks:a,resizeCallbacks:n}},computed:{camera:{get:function(){return this.three.camera},set:function(e){this.three.camera=e}},scene:{get:function(){return this.three.scene},set:function(e){this.three.scene=e}},composer:{get:function(){return this.three.composer},set:function(e){this.three.composer=e}}},provide(){return{[N]:this}},mounted(){var e;this.$el.parentNode.insertBefore(this.canvas,this.$el),this.three.init()&&(this.three.pointer&&(this.$pointer=this.three.pointer),this.three.config.onResize=t=>{this.resizeCallbacks.forEach(r=>r({type:"resize",renderer:this,size:t}))},this.shadow&&(this.renderer.shadowMap.enabled=!0),this.renderFn=this.three.composer?this.three.renderC:this.three.render,this.initCallbacks.forEach(t=>t({type:"init",renderer:this})),(e=this.onReady)==null||e.call(this,this),this.xr?(this.renderer.xr.enabled=!0,this.renderer.setAnimationLoop(this.render)):requestAnimationFrame(this.renderLoop)),this.mountedCallbacks.forEach(t=>t({type:"mounted",renderer:this}))},beforeUnmount(){this.canvas.remove(),this.beforeRenderCallbacks=[],this.afterRenderCallbacks=[],this.raf=!1,this.three.dispose()},methods:{onInit(e){this.addListener("init",e)},onMounted(e){this.addListener("mounted",e)},onBeforeRender(e){this.addListener("beforerender",e)},offBeforeRender(e){this.removeListener("beforerender",e)},onAfterRender(e){this.addListener("afterrender",e)},offAfterRender(e){this.removeListener("afterrender",e)},onResize(e){this.addListener("resize",e)},offResize(e){this.removeListener("resize",e)},addListener(e,t){this.getCallbacks(e).push(t)},removeListener(e,t){const r=this.getCallbacks(e),s=r.indexOf(t);s!==-1&&r.splice(s,1)},getCallbacks(e){return e==="init"?this.initCallbacks:e==="mounted"?this.mountedCallbacks:e==="beforerender"?this.beforeRenderCallbacks:e==="afterrender"?this.afterRenderCallbacks:this.resizeCallbacks},render(e){this.beforeRenderCallbacks.forEach(t=>t({type:"beforerender",renderer:this,time:e})),this.renderFn({renderer:this,time:e}),this.afterRenderCallbacks.forEach(t=>t({type:"afterrender",renderer:this,time:e}))},renderLoop(e){this.raf&&requestAnimationFrame(this.renderLoop),this.render(e)}},render(){return this.$slots.default?this.$slots.default():[]},__hmrId:"Renderer"}),Ae=o({props:{props:{type:Object,default:()=>({})}},render(){return this.$slots.default?this.$slots.default():[]}});function ae(e,t,r,s=!0){e[t]=r,s&&e.updateProjectionMatrix()}var Be=o({extends:Ae,name:"OrthographicCamera",props:{left:{type:Number,default:-1},right:{type:Number,default:1},top:{type:Number,default:1},bottom:{type:Number,default:-1},near:{type:Number,default:.1},far:{type:Number,default:2e3},zoom:{type:Number,default:1},position:{type:Object,default:()=>({x:0,y:0,z:0})}},setup(e){const t=V(N);if(!t){console.error("Renderer not found");return}const r=new ns(e.left,e.right,e.top,e.bottom,e.near,e.far);return t.camera=r,f(e,"position",r),A(e,"props",r,!0,ae),["left","right","top","bottom","near","far","zoom"].forEach(s=>{d(()=>e[s],i=>{ae(r,s,i)})}),{renderer:t,camera:r}},__hmrId:"OrthographicCamera"}),oe=o({extends:Ae,name:"PerspectiveCamera",props:{aspect:{type:Number,default:1},far:{type:Number,default:2e3},fov:{type:Number,default:50},near:{type:Number,default:.1},position:{type:Object,default:()=>({x:0,y:0,z:0})},lookAt:{type:Object,default:null}},setup(e){var t;const r=V(N);if(!r){console.error("Renderer not found");return}const s=new as(e.fov,e.aspect,e.near,e.far);return r.camera=s,f(e,"position",s),e.lookAt&&s.lookAt((t=e.lookAt.x)!=null?t:0,e.lookAt.y,e.lookAt.z),d(()=>e.lookAt,i=>{var a;s.lookAt((a=i.x)!=null?a:0,i.y,i.z)},{deep:!0}),A(e,"props",s,!0,ae),["aspect","far","fov","near"].forEach(i=>{d(()=>e[i],a=>{ae(s,i,a)})}),{renderer:r,camera:s}},__hmrId:"PerspectiveCamera"});const he=Symbol("Scene");var Fe=o({name:"Scene",props:{background:[String,Number,Object]},setup(e){const t=V(N),r=new os;if(!t){console.error("Renderer not found");return}t.scene=r,Jr(he,r);const s=n=>{!n||(typeof n=="string"||typeof n=="number"?r.background instanceof Y?r.background.set(n):r.background=new Y(n):n instanceof hs&&(r.background=n))};return s(e.background),d(()=>e.background,s),{scene:r,add:n=>{r.add(n)},remove:n=>{r.remove(n)}}},render(){return this.$slots.default?this.$slots.default():[]},__hmrId:"Scene"});const Pi={onPointerEnter:Function,onPointerOver:Function,onPointerMove:Function,onPointerLeave:Function,onPointerDown:Function,onPointerUp:Function,onClick:Function};var B=o({name:"Object3D",inject:{renderer:N,scene:he},emits:["created","ready"],props:{position:{type:Object,default:()=>({x:0,y:0,z:0})},rotation:{type:Object,default:()=>({x:0,y:0,z:0})},scale:{type:Object,default:()=>({x:1,y:1,z:1,order:"XYZ"})},lookAt:{type:Object,default:null},userData:{type:Object,default:()=>({})},visible:{type:Boolean,default:!0},props:{type:Object,default:()=>({})},disableAdd:{type:Boolean,default:!1},disableRemove:{type:Boolean,default:!1},...Pi},setup(){return{}},created(){this.renderer||console.error("Missing parent Renderer"),this.scene||console.error("Missing parent Scene")},unmounted(){this.disableRemove||this.removeFromParent(),this.o3d&&this.renderer&&this.renderer.three.removeIntersectObject(this.o3d)},methods:{initObject3D(e){var t;this.o3d=e,e.userData.component=this,(this.onPointerEnter||this.onPointerOver||this.onPointerMove||this.onPointerLeave||this.onPointerDown||this.onPointerUp||this.onClick)&&this.renderer&&this.renderer.three.addIntersectObject(e),f(this,"position",e),f(this,"rotation",e),f(this,"scale",e),f(this,"userData",e.userData),f(this,"visible",e),A(this,"props",e),this.$emit("created",e),this.lookAt&&e.lookAt((t=this.lookAt.x)!=null?t:0,this.lookAt.y,this.lookAt.z),d(()=>this.lookAt,r=>{var s;e.lookAt((s=r.x)!=null?s:0,r.y,r.z)},{deep:!0}),this.parent=this.getParent(),this.disableAdd||(this.addToParent()?this.$emit("ready",this):console.error("Missing parent (Scene, Group...)"))},getParent(){let e=this.$parent;if(!e){const t=Qr();t&&t.parent&&(e=t.parent.ctx)}for(;e;){if(e.add)return e;e=e.$parent}},addToParent(e){const t=e||this.o3d;return this.parent?(this.parent.add(t),!0):!1},removeFromParent(e){const t=e||this.o3d;return this.parent?(this.parent.remove(t),!0):!1},add(e){var t;(t=this.o3d)==null||t.add(e)},remove(e){var t;(t=this.o3d)==null||t.remove(e)}},render(){return this.$slots.default?this.$slots.default():[]},__hmrId:"Object3D"}),De=o({name:"Group",extends:B,setup(){return{group:new ds}},created(){this.initObject3D(this.group)},__hmrId:"Group"});const ee=()=>{};var Ue=o({name:"Raycaster",props:{onPointerEnter:{type:Function,default:ee},onPointerOver:{type:Function,default:ee},onPointerMove:{type:Function,default:ee},onPointerLeave:{type:Function,default:ee},onClick:{type:Function,default:ee},intersectMode:{type:String,default:"move"},intersectRecursive:{type:Boolean,default:!1}},setup(){return{renderer:V(N)}},mounted(){if(!this.renderer){console.error("Renderer not found");return}const e=this.renderer;this.renderer.onMounted(()=>{!e.camera||(this.pointer=ke({camera:e.camera,domElement:e.canvas,intersectObjects:()=>e.scene?e.scene.children:[],intersectRecursive:this.intersectRecursive,onIntersectEnter:this.onPointerEnter,onIntersectOver:this.onPointerOver,onIntersectMove:this.onPointerMove,onIntersectLeave:this.onPointerLeave,onIntersectClick:this.onClick}),this.pointer.addListeners(),this.intersectMode==="frame"&&e.onBeforeRender(this.pointer.intersect))})},unmounted(){var e;this.pointer&&(this.pointer.removeListeners(),(e=this.renderer)==null||e.offBeforeRender(this.pointer.intersect))},render(){return[]},__hmrId:"Raycaster"}),He=o({extends:B,props:{cubeRTSize:{type:Number,default:256},cubeCameraNear:{type:Number,default:.1},cubeCameraFar:{type:Number,default:2e3},autoUpdate:Boolean,hideMeshes:{type:Array,default:()=>[]}},setup(e){const t=V(N);if(!t||!t.scene)return console.error("Missing Renderer / Scene"),{};const r=t.renderer,s=t.scene,i=new us(e.cubeRTSize,{format:ls,generateMipmaps:!0,minFilter:cs}),a=new ms(e.cubeCameraNear,e.cubeCameraFar,i),n=()=>{e.hideMeshes.forEach(l=>{l.visible=!1}),a.update(r,s),e.hideMeshes.forEach(l=>{l.visible=!0})};return e.autoUpdate?(t.onBeforeRender(n),es(()=>{t.offBeforeRender(n)})):t.onMounted(n),{cubeRT:i,cubeCamera:a,updateRT:n}},created(){this.cubeCamera&&this.initObject3D(this.cubeCamera)},render(){return[]},__hmrId:"CubeCamera"});const Z=Symbol("Mesh"),H=o({name:"Mesh",extends:B,props:{castShadow:Boolean,receiveShadow:Boolean},setup(){return{}},provide(){return{[Z]:this}},mounted(){!this.mesh&&!this.loading&&this.initMesh()},methods:{initMesh(){const e=new fs(this.geometry,this.material);f(this,"castShadow",e),f(this,"receiveShadow",e),this.mesh=e,this.initObject3D(e)},createGeometry(){},addGeometryWatchers(e){Object.keys(e).forEach(t=>{d(()=>this[t],()=>{this.refreshGeometry()})})},setGeometry(e){this.geometry=e,this.mesh&&(this.mesh.geometry=e)},setMaterial(e){this.material=e,this.mesh&&(this.mesh.material=e)},refreshGeometry(){const e=this.geometry;this.createGeometry(),this.mesh&&this.geometry&&(this.mesh.geometry=this.geometry),e==null||e.dispose()}},unmounted(){this.geometry&&this.geometry.dispose(),this.material&&this.material.dispose()},__hmrId:"Mesh"});function P(e,t,r){return o({name:e,extends:H,props:t,created(){this.createGeometry(),this.addGeometryWatchers(t)},methods:{createGeometry(){this.geometry=r(this)}}})}const de=o({emits:["created"],props:{rotateX:Number,rotateY:Number,rotateZ:Number,attributes:{type:Array,default:()=>[]}},inject:{mesh:Z},setup(){return{}},created(){if(!this.mesh){console.error("Missing parent Mesh");return}this.createGeometry(),this.rotateGeometry(),this.geometry&&this.mesh.setGeometry(this.geometry),Object.keys(this.$props).forEach(e=>{d(()=>this[e],this.refreshGeometry)})},unmounted(){var e;(e=this.geometry)==null||e.dispose()},methods:{createGeometry(){const e={},t=new ps;this.attributes.forEach(r=>{if(r.name&&r.itemSize&&r.array){const s=e[r.name]=new ys(r.array,r.itemSize,r.normalized);t.setAttribute(r.name,s)}}),t.computeBoundingBox(),t.userData.component=this,this.geometry=t,this.$emit("created",t)},rotateGeometry(){!this.geometry||(this.rotateX&&this.geometry.rotateX(this.rotateX),this.rotateY&&this.geometry.rotateY(this.rotateY),this.rotateZ&&this.geometry.rotateZ(this.rotateZ))},refreshGeometry(){const e=this.geometry;this.createGeometry(),this.rotateGeometry(),this.geometry&&this.mesh&&this.mesh.setGeometry(this.geometry),e==null||e.dispose()}},render(){return[]}});function g(e,t,r){return o({name:e,extends:de,props:t,methods:{createGeometry(){this.geometry=r(this),this.geometry.userData.component=this,this.$emit("created",this.geometry)}}})}const Ve={size:Number,width:{type:Number,default:1},height:{type:Number,default:1},depth:{type:Number,default:1},widthSegments:{type:Number,default:1},heightSegments:{type:Number,default:1},depthSegments:{type:Number,default:1}};function Ke(e){return e.size?new _e(e.size,e.size,e.size,e.widthSegments,e.heightSegments,e.depthSegments):new _e(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}var Xe=g("BoxGeometry",Ve,Ke);const We={radius:{type:Number,default:1},segments:{type:Number,default:8},thetaStart:{type:Number,default:0},thetaLength:{type:Number,default:Math.PI*2}};function Ze(e){return new gs(e.radius,e.segments,e.thetaStart,e.thetaLength)}var qe=g("CircleGeometry",We,Ze);const Ye={radius:{type:Number,default:1},height:{type:Number,default:1},radialSegments:{type:Number,default:8},heightSegments:{type:Number,default:1},openEnded:{type:Boolean,default:!1},thetaStart:{type:Number,default:0},thetaLength:{type:Number,default:Math.PI*2}};function Je(e){return new vs(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}var Qe=g("ConeGeometry",Ye,Je);const et={radiusTop:{type:Number,default:1},radiusBottom:{type:Number,default:1},height:{type:Number,default:1},radialSegments:{type:Number,default:8},heightSegments:{type:Number,default:1},openEnded:{type:Boolean,default:!1},thetaStart:{type:Number,default:0},thetaLength:{type:Number,default:Math.PI*2}};function tt(e){return new bs(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}var rt=g("CylinderGeometry",et,tt);const st={radius:{type:Number,default:1},detail:{type:Number,default:0}};function it(e){return new Ss(e.radius,e.detail)}var nt=g("DodecahedronGeometry",st,it);const wi={shapes:{type:[Object,Array]},options:{type:Object}};function xi(e){return new Ps(e.shapes,e.options)}var at=g("ExtrudeGeometry",wi,xi);const ot={radius:{type:Number,default:1},detail:{type:Number,default:0}};function ht(e){return new ws(e.radius,e.detail)}var dt=g("IcosahedronGeometry",ot,ht);const ut={points:Array,segments:{type:Number,default:12},phiStart:{type:Number,default:0},phiLength:{type:Number,default:Math.PI*2}};function lt(e){return new xs(e.points,e.segments,e.phiStart,e.phiLength)}var ct=g("LatheGeometry",ut,lt);const mt={radius:{type:Number,default:1},detail:{type:Number,default:0}};function ft(e){return new Cs(e.radius,e.detail)}var pt=g("OctahedronGeometry",mt,ft);const yt={width:{type:Number,default:1},height:{type:Number,default:1},widthSegments:{type:Number,default:1},heightSegments:{type:Number,default:1}};function gt(e){return new Oe(e.width,e.height,e.widthSegments,e.heightSegments)}var vt=g("PlaneGeometry",yt,gt);const bt={vertices:Array,indices:Array,radius:{type:Number,default:1},detail:{type:Number,default:0}};function St(e){return new Ms(e.vertices,e.indices,e.radius,e.detail)}var Pt=g("PolyhedronGeometry",bt,St);const wt={innerRadius:{type:Number,default:.5},outerRadius:{type:Number,default:1},thetaSegments:{type:Number,default:8},phiSegments:{type:Number,default:1},thetaStart:{type:Number,default:0},thetaLength:{type:Number,default:Math.PI*2}};function xt(e){return new Gs(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}var Ct=g("RingGeometry",wt,xt);const Mt={radius:{type:Number,default:1},widthSegments:{type:Number,default:12},heightSegments:{type:Number,default:12},phiStart:{type:Number,default:0},phiLength:{type:Number,default:Math.PI*2},thetaStart:{type:Number,default:0},thetaLength:{type:Number,default:Math.PI}};function Gt(e){return new Ls(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}var Lt=g("SphereGeometry",Mt,Gt);const Ci={shapes:{type:[Object,Array]},curveSegments:{type:Number}};function Mi(e){return new _s(e.shapes,e.curveSegments)}var _t=g("ShapeGeometry",Ci,Mi);const Ot={radius:{type:Number,default:1},detail:{type:Number,default:0}};function Nt(e){return new Os(e.radius,e.detail)}var Et=g("TetrahedronGeometry",Ot,Nt);const Rt={radius:{type:Number,default:1},tube:{type:Number,default:.4},radialSegments:{type:Number,default:8},tubularSegments:{type:Number,default:6},arc:{type:Number,default:Math.PI*2}};function $t(e){return new Ns(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}var zt=g("TorusGeometry",Rt,$t);const jt={radius:{type:Number,default:1},tube:{type:Number,default:.4},tubularSegments:{type:Number,default:64},radialSegments:{type:Number,default:8},p:{type:Number,default:2},q:{type:Number,default:3}};function Tt(e){return new Es(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}var kt=g("TorusKnotGeometry",jt,Tt);const Pe={points:Array,path:$s,tubularSegments:{type:Number,default:64},radius:{type:Number,default:1},radialSegments:{type:Number,default:8},closed:{type:Boolean,default:!1}};function It(e){let t;return e.points?t=new Ne(e.points):e.path?t=e.path:console.error("Missing path curve or points."),new Rs(t,e.tubularSegments,e.radius,e.radiusSegments,e.closed)}var At=o({extends:de,props:Pe,methods:{createGeometry(){this.geometry=It(this)},updatePoints(e){Bt(this.geometry,e)}}});function Bt(e,t){const r=new Ne(t),{radialSegments:s,radius:i,tubularSegments:a,closed:n}=e.parameters,l=r.computeFrenetFrames(a,n);e.tangents=l.tangents,e.normals=l.normals,e.binormals=l.binormals,e.parameters.path=r;const M=e.getAttribute("position"),G=e.getAttribute("normal"),m=new ie,_=new ie;for(let v=0;v<a;v++)E(v);E(a),e.attributes.position.needsUpdate=!0,e.attributes.normal.needsUpdate=!0;function E(v){r.getPointAt(v/a,_);const D=l.normals[v],U=l.binormals[v];for(let p=0;p<=s;p++){const y=p/s*Math.PI*2,R=Math.sin(y),h=-Math.cos(y);m.x=h*D.x+R*U.x,m.y=h*D.y+R*U.y,m.z=h*D.z+R*U.z,m.normalize();const u=v*(s+1)+p;G.setXYZ(u,m.x,m.y,m.z),M.setXYZ(u,_.x+i*m.x,_.y+i*m.y,_.z+i*m.z)}}}var q=o({extends:B,name:"Light",props:{color:{type:String,default:"#ffffff"},intensity:{type:Number,default:1},castShadow:{type:Boolean,default:!1},shadowMapSize:{type:Object,default:()=>({x:512,y:512})},shadowCamera:{type:Object,default:()=>({})}},setup(){return{}},unmounted(){(this.light instanceof ge||this.light instanceof ve)&&this.removeFromParent(this.light.target)},methods:{initLight(e){this.light=e,e.shadow&&(e.castShadow=this.castShadow,W(e.shadow.mapSize,this.shadowMapSize),W(e.shadow.camera,this.shadowCamera)),["color","intensity","castShadow"].forEach(t=>{d(()=>this[t],r=>{t==="color"?e.color.set(r):e[t]=r})}),this.initObject3D(e),(e instanceof ge||e instanceof ve)&&(f(this,"target",e.target,"position"),this.addToParent(e.target))}},__hmrId:"Light"}),Ft=o({extends:q,created(){this.initLight(new zs(this.color,this.intensity))},__hmrId:"AmbientLight"}),Dt=o({extends:q,props:{target:{type:Object,default:()=>({x:0,y:0,z:0})}},created(){this.initLight(new ve(this.color,this.intensity))},__hmrId:"DirectionalLight"}),Ut=o({extends:q,props:{groundColor:{type:String,default:"#444444"}},created(){const e=new js(this.color,this.groundColor,this.intensity);d(()=>this.groundColor,t=>{e.groundColor.set(t)}),this.initLight(e)},__hmrId:"HemisphereLight"}),Ht=o({extends:q,props:{distance:{type:Number,default:0},decay:{type:Number,default:1}},created(){this.initLight(new Ts(this.color,this.intensity,this.distance,this.decay))},__hmrId:"PointLight"}),Vt=o({extends:q,props:{width:{type:Number,default:10},height:{type:Number,default:10},helper:Boolean},created(){ti.init();const e=new ks(this.color,this.intensity,this.width,this.height);if(["width","height"].forEach(r=>{d(()=>this[r],s=>{e[r]=s})}),this.helper){const r=new ri(e);e.add(r)}this.initLight(e)},__hmrId:"RectAreaLight"}),Kt=o({extends:q,props:{angle:{type:Number,default:Math.PI/3},decay:{type:Number,default:1},distance:{type:Number,default:0},penumbra:{type:Number,default:0},target:Object},created(){const e=new ge(this.color,this.intensity,this.distance,this.angle,this.penumbra,this.decay);["angle","decay","distance","penumbra"].forEach(r=>{d(()=>this[r],s=>{e[r]=s})}),this.initLight(e)},__hmrId:"SpotLight"});const ue=Symbol("Material"),le=o({emits:["created"],props:{color:{type:String,default:"#ffffff"},props:{type:Object,default:()=>({})}},inject:{mesh:Z},setup(){return{}},provide(){return{[ue]:this}},created(){if(!this.mesh){console.error("Missing parent Mesh");return}if(this.createMaterial){const e=this.material=this.createMaterial();d(()=>this.color,t=>{e.color.set(t)}),A(this,"props",e,!1,this.setProp),this.$emit("created",e),this.mesh.setMaterial(e)}},unmounted(){var e;(e=this.material)==null||e.dispose()},methods:{getMaterialParams(){return{...Q(this.$props,["props"]),...this.props}},setProp(e,t,r,s=!1){const i=e[t];i instanceof Y?i.set(r):e[t]=r,e.needsUpdate=s},setTexture(e,t="map"){this.setProp(this.material,t,e,!0)}},render(){return this.$slots.default?this.$slots.default():[]},__hmrId:"Material"});function T(e,t,r){return o({name:e,extends:le,props:t,methods:{createMaterial(){return r(this.getMaterialParams())}}})}const Xt=T("BasicMaterial",{props:{type:Object,default:()=>({})}},e=>new Ee(e)),Wt=T("LambertMaterial",{props:{type:Object,default:()=>({})}},e=>new Is(e)),Zt=T("PhongMaterial",{props:{type:Object,default:()=>({})}},e=>new As(e)),qt=T("PhysicalMaterial",{props:{type:Object,default:()=>({})}},e=>new Bs(e)),Yt=T("PointsMaterial",{props:{type:Object,default:()=>({})}},e=>new Fs(e)),Jt=T("ShadowMaterial",{color:{type:String,default:"#000000"},props:{type:Object,default:()=>({})}},e=>new Ds(e)),Qt=T("StandardMaterial",{props:{type:Object,default:()=>({})}},e=>new Us(e)),er=T("ToonMaterial",{props:{type:Object,default:()=>({})}},e=>new Hs(e));var tr=T("MatcapMaterial",{src:String,name:{type:String,default:"0404E8_0404B5_0404CB_3333FC"}},e=>{const t=e.src?e.src:Se(e.name),r=Q(e,["src","name"]);return r.matcap=new J().load(t),new Vs(r)});const Gi=`
  varying vec2 vUv;
  void main(){
    vUv = uv;
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);
  }
`,Li=`
  varying vec2 vUv;
  void main() {
    gl_FragColor = vec4(vUv.x, vUv.y, 0., 1.0);
  }
`;var rr=T("ShaderMaterial",{props:{type:Object,default:()=>({uniforms:{},vertexShader:Gi,fragmentShader:Li})}},e=>new be(Q(e,["color"])));function _i(e,t,r){return e.split(t).join(r)}const Oi=K.meshphong_frag.slice(0,K.meshphong_frag.indexOf("void main() {")),Ni=K.meshphong_frag.slice(K.meshphong_frag.indexOf("void main() {")),Ei={uniforms:Re.merge([Ks.phong.uniforms,{thicknessColor:{value:new Y(16777215)},thicknessDistortion:{value:.1},thicknessAmbient:{value:0},thicknessAttenuation:{value:.1},thicknessPower:{value:2},thicknessScale:{value:10}}]),vertexShader:`
    #define USE_UV
    ${K.meshphong_vert}
  `,fragmentShader:`
    #define USE_UV
    #define SUBSURFACE

    ${Oi}

    uniform float thicknessPower;
    uniform float thicknessScale;
    uniform float thicknessDistortion;
    uniform float thicknessAmbient;
    uniform float thicknessAttenuation;
    uniform vec3 thicknessColor;

    void RE_Direct_Scattering(const in IncidentLight directLight, const in vec2 uv, const in GeometricContext geometry, inout ReflectedLight reflectedLight) {
      #ifdef USE_COLOR
        vec3 thickness = vColor * thicknessColor;
      #else
        vec3 thickness = thicknessColor;
      #endif
      vec3 scatteringHalf = normalize(directLight.direction + (geometry.normal * thicknessDistortion));
      float scatteringDot = pow(saturate(dot(geometry.viewDir, -scatteringHalf)), thicknessPower) * thicknessScale;
      vec3 scatteringIllu = (scatteringDot + thicknessAmbient) * thickness;
      reflectedLight.directDiffuse += scatteringIllu * thicknessAttenuation * directLight.color;
    }
  `+Ni.replace("#include <lights_fragment_begin>",_i(K.lights_fragment_begin,"RE_Direct( directLight, geometry, material, reflectedLight );",`
        RE_Direct( directLight, geometry, material, reflectedLight );
        #if defined( SUBSURFACE ) && defined( USE_UV )
          RE_Direct_Scattering(directLight, vUv, geometry, reflectedLight);
        #endif
      `))};var sr=o({extends:le,props:{uniforms:{type:Object,default:()=>({diffuse:"#ffffff",thicknessColor:"#ffffff",thicknessDistortion:.4,thicknessAmbient:.01,thicknessAttenuation:.7,thicknessPower:2,thicknessScale:4})}},methods:{createMaterial(){const e=Ei,t=Re.clone(e.uniforms);return A(this,"uniforms",t,!0,(s,i,a)=>{const n=s[i].value;n instanceof Y?n.set(a):s[i].value=a}),new be({...e,lights:!0,...this.props,uniforms:t})}}}),ce=o({inject:{material:ue},props:{name:{type:String,default:"map"},uniform:String,src:String,onLoad:Function,onProgress:Function,onError:Function,props:{type:Object,default:()=>({})}},setup(){return{}},created(){this.refreshTexture(),d(()=>this.src,this.refreshTexture)},unmounted(){var e,t;(e=this.material)==null||e.setTexture(null,this.name),(t=this.texture)==null||t.dispose()},methods:{createTexture(){if(!!this.src)return new J().load(this.src,this.onLoaded,this.onProgress,this.onError)},initTexture(){!this.texture||(A(this,"props",this.texture),!!this.material&&(this.material.setTexture(this.texture,this.name),this.material.material instanceof be&&this.uniform&&(this.material.material.uniforms[this.uniform]={value:this.texture})))},refreshTexture(){var e;(e=this.texture)==null||e.dispose(),this.texture=this.createTexture(),this.initTexture()},onLoaded(e){var t;(t=this.onLoad)==null||t.call(this,e)}},render(){return[]}}),ir=o({extends:ce,props:{name:{type:String,default:"envMap"},path:{type:String,required:!0},urls:{type:Array,default:()=>["px.jpg","nx.jpg","py.jpg","ny.jpg","pz.jpg","nz.jpg"]},props:{type:Object,default:()=>({mapping:Xs})}},created(){d(()=>this.path,this.refreshTexture),d(()=>this.urls,this.refreshTexture)},methods:{createTexture(){return new Ws().setPath(this.path).load(this.urls,this.onLoaded,this.onProgress,this.onError)}}}),nr=o({extends:ce,props:{videoId:{type:String,required:!0}},created(){d(()=>this.videoId,this.refreshTexture)},methods:{createTexture(){const e=document.getElementById(this.videoId);return new Zs(e)}}}),ar=P("Box",Ve,Ke),or=P("Circle",We,Ze),hr=P("Cone",Ye,Je),dr=P("Cylinder",et,tt),ur=P("Dodecahedron",st,it),lr=P("Icosahedron",ot,ht),cr=P("Lathe",ut,lt),mr=P("Octahedron",mt,ft),fr=P("Plane",yt,gt),pr=P("Polyhedron",bt,St),yr=P("Ring",wt,xt),gr=P("Sphere",Mt,Gt),vr=P("Tetrahedron",Ot,Nt);const Ri={text:{type:String,required:!0,default:"Text"},fontSrc:{type:String,required:!0},size:{type:Number,default:80},height:{type:Number,default:5},depth:{type:Number,default:1},curveSegments:{type:Number,default:12},bevelEnabled:{type:Boolean,default:!1},bevelThickness:{type:Number,default:10},bevelSize:{type:Number,default:8},bevelOffset:{type:Number,default:0},bevelSegments:{type:Number,default:5},align:{type:[Boolean,String],default:!1}};var br=o({extends:H,props:Ri,setup(){return{}},created(){if(!this.fontSrc){console.error('Missing required prop: "font-src"');return}["text","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","align"].forEach(r=>{d(()=>this[r],()=>{this.font&&this.refreshGeometry()})});const t=new ii;this.loading=!0,t.load(this.fontSrc,r=>{this.loading=!1,this.font=r,this.createGeometry(),this.initMesh()})},methods:{createGeometry(){this.geometry=new si(this.text,{font:this.font,size:this.size,height:this.height,depth:this.depth,curveSegments:this.curveSegments,bevelEnabled:this.bevelEnabled,bevelThickness:this.bevelThickness,bevelSize:this.bevelSize,bevelOffset:this.bevelOffset,bevelSegments:this.bevelSegments}),this.align==="center"&&this.geometry.center()}}}),Sr=P("Torus",Rt,$t),Pr=P("TorusKnot",jt,Tt),wr=o({extends:H,props:Pe,created(){this.createGeometry(),this.addGeometryWatchers(Pe)},methods:{createGeometry(){this.geometry=It(this)},updatePoints(e){Bt(this.geometry,e)}},__hmrId:"Tube"}),xr=o({emits:["loaded"],extends:H,props:{src:{type:String,required:!0},width:Number,height:Number,widthSegments:{type:Number,default:1},heightSegments:{type:Number,default:1},keepSize:Boolean},setup(){return{}},created(){!this.renderer||(this.geometry=new Oe(1,1,this.widthSegments,this.heightSegments),this.material=new Ee({side:qs,map:this.loadTexture()}),d(()=>this.src,this.refreshTexture),["width","height"].forEach(e=>{d(()=>this[e],this.resize)}),this.resize(),this.keepSize&&this.renderer.onResize(this.resize))},unmounted(){var e;(e=this.renderer)==null||e.offResize(this.resize)},methods:{loadTexture(){return new J().load(this.src,this.onLoaded)},refreshTexture(){var e;(e=this.texture)==null||e.dispose(),this.material&&(this.material.map=this.loadTexture(),this.material.needsUpdate=!0)},onLoaded(e){this.texture=e,this.resize(),this.$emit("loaded",e)},resize(){if(!this.renderer||!this.texture)return;const e=this.renderer.size,t=this.texture.image.width,r=this.texture.image.height,s=t/r;let i=1,a=1;this.width&&this.height?(i=this.width*e.wWidth/e.width,a=this.height*e.wHeight/e.height):this.width?(i=this.width*e.wWidth/e.width,a=i/s):this.height?(a=this.height*e.wHeight/e.height,i=a*s):s>1?i=a*s:a=i/s,this.mesh&&(this.mesh.scale.x=i,this.mesh.scale.y=a)}},__hmrId:"Image"}),Cr=o({extends:H,props:{count:{type:Number,required:!0}},methods:{initMesh(){if(!!this.renderer){if(!this.geometry||!this.material)return console.error("Missing geometry and/or material"),!1;this.mesh=new ye(this.geometry,this.material,this.count),this.mesh.userData.component=this,f(this,"castShadow",this.mesh),f(this,"receiveShadow",this.mesh),(this.onPointerEnter||this.onPointerOver||this.onPointerMove||this.onPointerLeave||this.onPointerDown||this.onPointerUp||this.onClick)&&this.renderer.three.addIntersectObject(this.mesh),this.initObject3D(this.mesh)}}},__hmrId:"InstancedMesh"}),Mr=o({extends:B,emits:["loaded"],props:{src:{type:String,required:!0}},setup(){return{}},created(){this.texture=new J().load(this.src,this.onLoaded),this.material=new Ys({map:this.texture}),this.sprite=new Js(this.material),this.initObject3D(this.sprite)},unmounted(){var e,t;(e=this.texture)==null||e.dispose(),(t=this.material)==null||t.dispose()},methods:{onLoaded(){this.updateUV(),this.$emit("loaded")},updateUV(){if(!this.texture||!this.sprite)return;const e=this.texture.image.width,t=this.texture.image.height,r=e/t;let s=.5,i=.5;r>1?s=.5*r:i=.5/r;const a=this.sprite.geometry.attributes.position.array;a[0]=-s,a[1]=-i,a[5]=s,a[6]=-i,a[10]=s,a[11]=i,a[15]=-s,a[16]=i,this.sprite.geometry.attributes.position.needsUpdate=!0}},__hmrId:"Sprite"}),Gr=o({extends:B,setup(){return{}},provide(){return{[Z]:this}},mounted(){this.mesh=this.points=new Qs(this.geometry,this.material),this.initObject3D(this.mesh)},methods:{setGeometry(e){this.geometry=e,this.mesh&&(this.mesh.geometry=e)},setMaterial(e){this.material=e,this.mesh&&(this.mesh.material=e)}}}),Lr=o({extends:B,emits:["before-load","load","progress","error"],props:{src:{type:String,required:!0}},data(){return{progress:0}},methods:{onLoad(e){this.$emit("load",e)},onProgress(e){this.progress=e.loaded/e.total,this.$emit("progress",e)},onError(e){this.$emit("error",e)}}}),_r=o({extends:Lr,created(){const e=new ni;this.$emit("before-load",e),e.load(this.src,t=>{this.onLoad(t),this.initObject3D(t.scene)},this.onProgress,this.onError)}}),Or=o({extends:Lr,created(){const e=new ai;this.$emit("before-load",e),e.load(this.src,t=>{this.onLoad(t),this.initObject3D(t)},this.onProgress,this.onError)}});const me=Symbol("Composer");var Nr=o({setup(){return{renderer:V(N)}},provide(){return{[me]:this}},created(){if(!this.renderer){console.error("Renderer not found");return}const e=this.renderer,t=new oi(this.renderer.renderer);this.composer=t,this.renderer.composer=t,e.addListener("init",()=>{e.renderer.autoClear=!1,this.resize(),e.addListener("resize",this.resize)})},unmounted(){var e;(e=this.renderer)==null||e.removeListener("resize",this.resize)},methods:{addPass(e){var t;(t=this.composer)==null||t.addPass(e)},removePass(e){var t;(t=this.composer)==null||t.removePass(e)},resize(){this.composer&&this.renderer&&this.composer.setSize(this.renderer.size.width,this.renderer.size.height)}},render(){return this.$slots.default?this.$slots.default():[]},__hmrId:"EffectComposer"}),L=o({inject:{renderer:N,composer:me},emits:["ready"],setup(){return{}},created(){this.composer||console.error("Missing parent EffectComposer"),this.renderer||console.error("Missing parent Renderer")},unmounted(){var e,t,r;this.pass&&((e=this.composer)==null||e.removePass(this.pass),(r=(t=this.pass).dispose)==null||r.call(t))},methods:{initEffectPass(e){var t;this.pass=e,(t=this.composer)==null||t.addPass(e),this.$emit("ready",e)}},render(){return[]},__hmrId:"EffectPass"}),Er=o({extends:L,created(){if(!this.renderer)return;if(!this.renderer.scene){console.error("Missing Scene");return}if(!this.renderer.camera){console.error("Missing Camera");return}const e=new hi(this.renderer.scene,this.renderer.camera);this.initEffectPass(e)},__hmrId:"RenderPass"});const Rr={focus:{type:Number,default:1},aperture:{type:Number,default:.025},maxblur:{type:Number,default:.01}};var $r=o({extends:L,props:Rr,created(){if(!this.renderer)return;if(!this.renderer.scene){console.error("Missing Scene");return}if(!this.renderer.camera){console.error("Missing Camera");return}const e={focus:this.focus,aperture:this.aperture,maxblur:this.maxblur,width:this.renderer.size.width,height:this.renderer.size.height},t=new di(this.renderer.scene,this.renderer.camera,e);Object.keys(Rr).forEach(r=>{d(()=>this[r],s=>{t.uniforms[r].value=s})}),this.initEffectPass(t)},__hmrId:"BokehPass"});const zr={noiseIntensity:{type:Number,default:.5},scanlinesIntensity:{type:Number,default:.05},scanlinesCount:{type:Number,default:4096},grayscale:{type:Number,default:0}};var jr=o({extends:L,props:zr,created(){const e=new ui(this.noiseIntensity,this.scanlinesIntensity,this.scanlinesCount,this.grayscale);Object.keys(zr).forEach(t=>{d(()=>this[t],r=>{e.uniforms[t].value=r})}),this.initEffectPass(e)},__hmrId:"FilmPass"}),Tr=o({extends:L,created(){var e;const t=new ne(li);(e=this.renderer)==null||e.addListener("resize",this.resize),this.initEffectPass(t)},unmounted(){var e;(e=this.renderer)==null||e.removeListener("resize",this.resize)},methods:{resize({size:e}){if(this.pass){const{resolution:t}=this.pass.material.uniforms;t.value.x=1/e.width,t.value.y=1/e.height}}},__hmrId:"FXAAPass"});const kr={shape:{type:Number,default:1},radius:{type:Number,default:4},rotateR:{type:Number,default:Math.PI/12*1},rotateG:{type:Number,default:Math.PI/12*2},rotateB:{type:Number,default:Math.PI/12*3},scatter:{type:Number,default:0}};var Ir=o({extends:L,props:kr,created(){if(!this.renderer)return;const e=new ci(this.renderer.size.width,this.renderer.size.height,{});Object.keys(kr).forEach(t=>{e.uniforms[t].value=this[t],d(()=>this[t],r=>{e.uniforms[t].value=r})}),this.initEffectPass(e)},__hmrId:"HalftonePass"}),Ar=o({extends:L,created(){if(!this.renderer)return;const e=new mi(this.renderer.size.width,this.renderer.size.height);this.initEffectPass(e)},__hmrId:"SMAAPass"}),Br=o({extends:L,props:{options:{type:Object,default:()=>({})}},created(){if(!this.renderer)return;if(!this.renderer.scene){console.error("Missing Scene");return}if(!this.renderer.camera){console.error("Missing Camera");return}const e=new fi(this.renderer.scene,this.renderer.camera,this.renderer.size.width,this.renderer.size.height);Object.keys(this.options).forEach(t=>{e[t]=this.options[t]}),this.initEffectPass(e)},__hmrId:"SSAOPass"}),Fr={uniforms:{},vertexShader:`
    varying vec2 vUv;
    void main() {
      vUv = uv;
      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
    }
  `,fragmentShader:`
    varying vec2 vUv;
    void main() {
      gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);
    }
  `},Dr={uniforms:{tDiffuse:{value:null},blurRadius:{value:0},gradientRadius:{value:0},start:{value:new I},end:{value:new I},delta:{value:new I},texSize:{value:new I}},vertexShader:Fr.vertexShader,fragmentShader:`
    uniform sampler2D tDiffuse;
    uniform float blurRadius;
    uniform float gradientRadius;
    uniform vec2 start;
    uniform vec2 end;
    uniform vec2 delta;
    uniform vec2 texSize;
    varying vec2 vUv;

    float random(vec3 scale, float seed) {
      /* use the fragment position for a different seed per-pixel */
      return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);
    }

    void main() {
      vec4 color = vec4(0.0);
      float total = 0.0;

      /* randomize the lookup values to hide the fixed number of samples */
      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);

      vec2 normal = normalize(vec2(start.y - end.y, end.x - start.x));
      float radius = smoothstep(0.0, 1.0, abs(dot(vUv * texSize - start, normal)) / gradientRadius) * blurRadius;
      for (float t = -30.0; t <= 30.0; t++) {
          float percent = (t + offset - 0.5) / 30.0;
          float weight = 1.0 - abs(percent);
          vec4 texel = texture2D(tDiffuse, vUv + delta / texSize * percent * radius);
          // vec4 texel2 = texture2D(tDiffuse, vUv + vec2(-delta.y, delta.x) / texSize * percent * radius);

          /* switch to pre-multiplied alpha to correctly blur transparent images */
          texel.rgb *= texel.a;
          // texel2.rgb *= texel2.a;

          color += texel * weight;
          total += 2.0 * weight;
      }

      gl_FragColor = color / total;

      /* switch back from pre-multiplied alpha */
      gl_FragColor.rgb /= gl_FragColor.a + 0.00001;
    }
  `};const $i={blurRadius:{type:Number,default:10},gradientRadius:{type:Number,default:100},start:{type:Object,default:()=>({x:0,y:100})},end:{type:Object,default:()=>({x:10,y:100})}};var Ur=o({extends:L,props:$i,setup(){return{uniforms1:{},uniforms2:{}}},created(){if(!this.composer)return;this.pass1=new ne(Dr),this.pass2=new ne(Dr);const e=this.uniforms1=this.pass1.uniforms,t=this.uniforms2=this.pass2.uniforms;t.blurRadius=e.blurRadius,t.gradientRadius=e.gradientRadius,t.start=e.start,t.end=e.end,t.texSize=e.texSize,f(this,"blurRadius",e.blurRadius,"value"),f(this,"gradientRadius",e.gradientRadius,"value"),this.updateFocusLine(),["start","end"].forEach(r=>{d(()=>this[r],this.updateFocusLine,{deep:!0})}),this.pass1.setSize=(r,s)=>{e.texSize.value.set(r,s)},this.initEffectPass(this.pass1),this.composer.addPass(this.pass2)},unmounted(){this.composer&&this.pass2&&this.composer.removePass(this.pass2)},methods:{updateFocusLine(){this.uniforms1.start.value.copy(this.start),this.uniforms1.end.value.copy(this.end);const e=new I().copy(this.end).sub(this.start).normalize();this.uniforms1.delta.value.copy(e),this.uniforms2.delta.value.set(-e.y,e.x)}},__hmrId:"TiltShiftPass"});const Hr={strength:{type:Number,default:1.5},radius:{type:Number,default:0},threshold:{type:Number,default:0}};var Vr=o({extends:L,props:Hr,created(){if(!this.renderer)return;const e=new I(this.renderer.size.width,this.renderer.size.height),t=new pi(e,this.strength,this.radius,this.threshold);Object.keys(Hr).forEach(r=>{d(()=>this[r],s=>{t.uniforms[r].value=s})}),this.initEffectPass(t)},__hmrId:"UnrealBloomPass"}),zi={uniforms:{tDiffuse:{value:null},center:{value:new I(.5,.5)},strength:{value:0}},vertexShader:Fr.vertexShader,fragmentShader:`
    uniform sampler2D tDiffuse;
    uniform vec2 center;
    uniform float strength;
    varying vec2 vUv;

    float random(vec3 scale, float seed) {
      /* use the fragment position for a different seed per-pixel */
      return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);
    }
    
    void main() {
      vec4 color = vec4(0.0);
      float total = 0.0;
      vec2 toCenter = center - vUv;
      
      /* randomize the lookup values to hide the fixed number of samples */
      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);
      
      for (float t = 0.0; t <= 40.0; t++) {
        float percent = (t + offset) / 40.0;
        float weight = 4.0 * (percent - percent * percent);
        vec4 texel = texture2D(tDiffuse, vUv + toCenter * percent * strength);

        /* switch to pre-multiplied alpha to correctly blur transparent images */
        texel.rgb *= texel.a;

        color += texel * weight;
        total += weight;
      }

      gl_FragColor = color / total;

      /* switch back from pre-multiplied alpha */
      gl_FragColor.rgb /= gl_FragColor.a + 0.00001;
    }
  `},Kr=o({extends:L,props:{center:{type:Object,default:()=>({x:.5,y:.5})},strength:{type:Number,default:.5}},created(){const e=new ne(zi);f(this,"center",e.uniforms.center,"value"),f(this,"strength",e.uniforms.strength,"value"),this.initEffectPass(e)},__hmrId:"ZoomBlurPass"}),ji=Object.freeze({__proto__:null,Renderer:Ie,RendererInjectionKey:N,OrthographicCamera:Be,PerspectiveCamera:oe,Camera:oe,Group:De,Scene:Fe,SceneInjectionKey:he,Object3D:B,Raycaster:Ue,CubeCamera:He,BufferGeometry:de,BoxGeometry:Xe,CircleGeometry:qe,ConeGeometry:Qe,CylinderGeometry:rt,DodecahedronGeometry:nt,ExtrudeGeometry:at,IcosahedronGeometry:dt,LatheGeometry:ct,OctahedronGeometry:pt,PlaneGeometry:vt,PolyhedronGeometry:Pt,RingGeometry:Ct,SphereGeometry:Lt,ShapeGeometry:_t,TetrahedronGeometry:Et,TorusGeometry:zt,TorusKnotGeometry:kt,TubeGeometry:At,AmbientLight:Ft,DirectionalLight:Dt,HemisphereLight:Ut,PointLight:Ht,RectAreaLight:Vt,SpotLight:Kt,Material:le,BasicMaterial:Xt,LambertMaterial:Wt,PhongMaterial:Zt,PhysicalMaterial:qt,PointsMaterial:Yt,ShadowMaterial:Jt,StandardMaterial:Qt,ToonMaterial:er,MaterialInjectionKey:ue,MatcapMaterial:tr,ShaderMaterial:rr,SubSurfaceMaterial:sr,Texture:ce,CubeTexture:ir,VideoTexture:nr,Mesh:H,MeshInjectionKey:Z,Box:ar,Circle:or,Cone:hr,Cylinder:dr,Dodecahedron:ur,Icosahedron:lr,Lathe:cr,Octahedron:mr,Plane:fr,Polyhedron:pr,Ring:yr,Sphere:gr,Tetrahedron:vr,Text:br,Torus:Sr,TorusKnot:Pr,Tube:wr,Image:xr,InstancedMesh:Cr,Sprite:Mr,Points:Gr,GltfModel:_r,FbxModel:Or,EffectComposer:Nr,ComposerInjectionKey:me,RenderPass:Er,EffectPass:L,BokehPass:$r,FilmPass:jr,FXAAPass:Tr,HalftonePass:Ir,SMAAPass:Ar,SSAOPass:Br,TiltShiftPass:Ur,UnrealBloomPass:Vr,ZoomBlurPass:Kr,applyObjectProps:X,bindObjectProp:A,bindObjectProps:$e,setFromProp:W,bindProps:ze,bindProp:f,propsValues:Q,lerp:je,limit:Te,getMatcapUrl:Se});const Xr={install(e){["Camera","OrthographicCamera","PerspectiveCamera","Raycaster","Renderer","Scene","Group","CubeCamera","AmbientLight","DirectionalLight","HemisphereLight","PointLight","RectAreaLight","SpotLight","BasicMaterial","LambertMaterial","MatcapMaterial","PhongMaterial","PhysicalMaterial","PointsMaterial","ShaderMaterial","StandardMaterial","SubSurfaceMaterial","ToonMaterial","Texture","CubeTexture","BufferGeometry","Mesh","Box","BoxGeometry","Circle","CircleGeometry","Cone","ConeGeometry","Cylinder","CylinderGeometry","Dodecahedron","DodecahedronGeometry","Icosahedron","IcosahedronGeometry","Lathe","LatheGeometry","Octahedron","OctahedronGeometry","Plane","PlaneGeometry","Polyhedron","PolyhedronGeometry","Ring","RingGeometry","Sphere","SphereGeometry","Tetrahedron","TetrahedronGeometry","Text","Torus","TorusGeometry","TorusKnot","TorusKnotGeometry","Tube","TubeGeometry","Image","InstancedMesh","Points","Sprite","FbxModel","GltfModel","BokehPass","EffectComposer","FilmPass","FXAAPass","HalftonePass","RenderPass","SAOPass","SMAAPass","SSAOPass","TiltShiftPass","UnrealBloomPass","ZoomBlurPass"].forEach(r=>{e.component(r,ji[r])})}};function Ti(e){return ts(e).use(Xr)}function ki(){const e={loader:new J,count:0,textures:[],loadProgress:0,loadTextures:t,dispose:s};return e;function t(i,a){e.count=i.length,e.textures.splice(0),e.loadProgress=0,Promise.all(i.map(r)).then(a)}function r(i,a){return new Promise(n=>{e.loader.load(i.src,l=>{e.loadProgress+=1/e.count,e.textures[a]=l,n(l)})})}function s(){e.textures.forEach(i=>i.dispose())}}export{Ft as AmbientLight,Xt as BasicMaterial,$r as BokehPass,ar as Box,Xe as BoxGeometry,de as BufferGeometry,oe as Camera,or as Circle,qe as CircleGeometry,me as ComposerInjectionKey,hr as Cone,Qe as ConeGeometry,He as CubeCamera,ir as CubeTexture,dr as Cylinder,rt as CylinderGeometry,Dt as DirectionalLight,ur as Dodecahedron,nt as DodecahedronGeometry,Nr as EffectComposer,L as EffectPass,at as ExtrudeGeometry,Tr as FXAAPass,Or as FbxModel,jr as FilmPass,_r as GltfModel,De as Group,Ir as HalftonePass,Ut as HemisphereLight,lr as Icosahedron,dt as IcosahedronGeometry,xr as Image,Cr as InstancedMesh,Wt as LambertMaterial,cr as Lathe,ct as LatheGeometry,tr as MatcapMaterial,le as Material,ue as MaterialInjectionKey,H as Mesh,Z as MeshInjectionKey,B as Object3D,mr as Octahedron,pt as OctahedronGeometry,Be as OrthographicCamera,oe as PerspectiveCamera,Zt as PhongMaterial,qt as PhysicalMaterial,fr as Plane,vt as PlaneGeometry,Ht as PointLight,Gr as Points,Yt as PointsMaterial,pr as Polyhedron,Pt as PolyhedronGeometry,Ue as Raycaster,Vt as RectAreaLight,Er as RenderPass,Ie as Renderer,N as RendererInjectionKey,yr as Ring,Ct as RingGeometry,Ar as SMAAPass,Br as SSAOPass,Fe as Scene,he as SceneInjectionKey,rr as ShaderMaterial,Jt as ShadowMaterial,_t as ShapeGeometry,gr as Sphere,Lt as SphereGeometry,Kt as SpotLight,Mr as Sprite,Qt as StandardMaterial,sr as SubSurfaceMaterial,vr as Tetrahedron,Et as TetrahedronGeometry,br as Text,ce as Texture,Ur as TiltShiftPass,er as ToonMaterial,Sr as Torus,zt as TorusGeometry,Pr as TorusKnot,kt as TorusKnotGeometry,Xr as TroisJSVuePlugin,wr as Tube,At as TubeGeometry,Vr as UnrealBloomPass,nr as VideoTexture,Kr as ZoomBlurPass,X as applyObjectProps,A as bindObjectProp,$e as bindObjectProps,f as bindProp,ze as bindProps,Ti as createApp,Se as getMatcapUrl,je as lerp,Te as limit,Q as propsValues,W as setFromProp,ki as useTextures};
//# sourceMappingURL=trois.module.min.js.map
